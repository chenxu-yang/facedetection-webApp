{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/GitHub/facedetection-webApp/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport 'tachyons';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Logo from './components/Logo/Logo';\nimport Rank from './components/Rank/Rank';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nconst app = new Clarifai.App({\n  apiKey: '8791f72601c0494e98867342687427bc'\n});\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 100,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displaceFaceBox = box => {\n      this.setState({\n        box: box\n      });\n      console.log(box);\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      console.log(this.state.imageUrl);\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => this.displaceFaceBox(this.calculateFaceLocation(response))).catch(err => console.log(err)); // console.log(response.outputs[0].data.regions[0].region_info.bounding_box);\n    };\n\n    this.onRouteChange = () => {\n      this.setState({\n        route: 'home'\n      });\n    };\n\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n    };\n  }\n\n  render() {\n    const {\n      isSignedIn,\n      imageUrl,\n      route,\n      box\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Particles, {\n      className: \"particles\",\n      params: particlesOptions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 10\n      }\n    }), /*#__PURE__*/React.createElement(Navigation, {\n      isSignedIn: isSignedIn,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }), route === 'home' ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Logo, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Rank, {\n      name: this.state.user.name,\n      entries: this.state.user.entries,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(ImageLinkForm, {\n      onInputChange: this.onInputChange,\n      onButtonSubmit: this.onButtonSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(FaceRecognition, {\n      box: box,\n      imageUrl: imageUrl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 15\n      }\n    })) : route === 'signin' ? /*#__PURE__*/React.createElement(Signin, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 16\n      }\n    }) : /*#__PURE__*/React.createElement(Register, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 16\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/mac/Documents/GitHub/facedetection-webApp/src/App.js"],"names":["React","Component","Navigation","Signin","Register","ImageLinkForm","FaceRecognition","Logo","Rank","Particles","Clarifai","app","App","apiKey","particlesOptions","particles","number","value","density","enable","value_area","constructor","loadUser","data","setState","user","id","name","email","entries","joined","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displaceFaceBox","box","console","log","onInputChange","event","input","target","onButtonSubmit","imageUrl","state","models","predict","FACE_DETECT_MODEL","then","response","catch","err","onRouteChange","route","isSignedIn","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport 'tachyons';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm'\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Logo from './components/Logo/Logo';\nimport Rank from './components/Rank/Rank'\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\n\nconst app = new Clarifai.App({apiKey: '8791f72601c0494e98867342687427bc'});\nconst particlesOptions={\n  particles:{\n    number:{\n      value:100,\n      density:{\n        enable:true,\n        value_area:800\n      }\n    }\n  }\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n    }\n  }\n\n  loadUser = (data) => {\n    this.setState({user: {\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entries: data.entries,\n      joined: data.joined\n    }})\n  }\n  calculateFaceLocation=(data)=>{\n    const clarifaiFace=data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image=document.getElementById('inputimage');\n    const width=Number(image.width);\n    const height=Number(image.height);\n    return {\n      leftCol:clarifaiFace.left_col*width,\n      topRow:clarifaiFace.top_row*height,\n      rightCol:width-(clarifaiFace.right_col*width),\n      bottomRow:height-(clarifaiFace.bottom_row*height)\n    }\n  }\n\n  displaceFaceBox=(box)=>{\n    this.setState({box:box});\n    console.log(box);\n  }\n  onInputChange=(event)=>{\n    this.setState({input:event.target.value});\n  }\n  onButtonSubmit=()=>{\n    this.setState({imageUrl:this.state.input})\n    console.log(this.state.imageUrl)\n    app.models.predict(Clarifai.FACE_DETECT_MODEL,\n        this.state.input\n    )\n    .then(response=> this.displaceFaceBox(this.calculateFaceLocation(response)))\n    .catch(err=>console.log(err));\n        // console.log(response.outputs[0].data.regions[0].region_info.bounding_box);\n  }\n  onRouteChange=()=>{\n    this.setState({route:'home'});\n  }\n  render() {\n    const { isSignedIn, imageUrl, route, box } = this.state;\n    return (\n      <div className=\"App\">\n         <Particles className='particles'\n          params={particlesOptions}\n        />\n        <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange} />\n        { route === 'home'\n          ? <div>\n              <Logo />\n              <Rank\n                name={this.state.user.name}\n                entries={this.state.user.entries}\n              />\n              <ImageLinkForm\n                onInputChange={this.onInputChange}\n                onButtonSubmit={this.onButtonSubmit}\n              />\n              <FaceRecognition box={box} imageUrl={imageUrl} />\n            </div>\n          : (\n             route === 'signin'\n             ? <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n             : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n            )\n        }\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}